spring:
  datasource:
    url: jdbc:mysql://172.19.88.163:3316/mm-gateway?characterEncoding=utf8&useUnicode=true&useSSL=false&serverTimezone=UTC
    username: ms_dev_root
    password: URf61uw@Mh
    driver-class-name:  com.mysql.jdbc.Driver
  liquibase:
    change-log: classpath:liquibase/master.xml
  cloud:
    ##注册中心使用nacos eureka2.0官方已经停止更新了
    ##nacos 比eureka功能更强大 = eureka + config
    # nacos:
    #   discovery:
    #     server-addr: localhost:8848
    gateway:
     discovery:
       locator:
       ##是否与服务注册于发现组件进行结合，通过 serviceId 转发到具体的服务实例。
       ##默认为 false，设为 true 便开启通过服务中心的自动根据 serviceId 创建路由的功能。
       ##可以说是省略了zuul的路由转发，这也是比zuul好的原因之一
         enabled: true

     ##路由，可以将指定的相对路径转发到某台服务器上。
     routes:
      - id: auth-api
        uri: lb://mm-auth
        predicates:
          - Path=/mm-auth/**
      - id: trade-api
        uri: lb://mm-trade
        predicates:
          - Path=/mm-trade/**   
      - id: operate-api
        uri: lb://mm-operate
        predicates:
          - Path=/mm-operate/**  
      - id: search-api
        uri: lb://mm-search
        predicates:
          - Path=/mm-search/**                               
      - id: user-api
        #格式为: lb://应用注册服务名
        uri: lb://mm-user
        predicates:
          - Path=/mm-user/**
#          - Method=GET
        filters:
          - SwaggerHeaderFilter
          - StripPrefix=1
          - name: RequestRateLimiter
            args:
              # 每秒最大访问次数
              redis-rate-limiter.replenishRate: 10000
              # 令牌桶最大容量
              redis-rate-limiter.burstCapacity: 40000
              # 使用SpEL名称引用Bean，与上面新建的RateLimiterConfig类中的bean的name相同
              key-resolver: "#{@ipKeyResolver}"
          # - name: Hystrix
          #   args:
          #     name: fallback
          #     fallbackUri: forward:/userFallback
#      - id: user_route
#      #格式为: lb://应用注册服务名
#        uri: lb://micro-user
#        predicates:
#          - Path=/micro-user/**
##          - Method=GET
#        filters:
#          - SwaggerHeaderFilter
#          - StripPrefix=1
#          - name: RequestRateLimiter
#            args:
#              # 每秒最大访问次数
#              redis-rate-limiter.replenishRate: 10000
#              # 令牌桶最大容量
#              redis-rate-limiter.burstCapacity: 40000
#              # 使用SpEL名称引用Bean，与上面新建的RateLimiterConfig类中的bean的name相同
#              key-resolver: "#{@ipKeyResolver}"
#          - name: Hystrix
#            args:
#              name: fallback
#              fallbackUri: forward:/userFallback
#      - id: product_route
#      #格式为: lb://应用注册服务名
#        uri: lb://micro-product
#        predicates:
#          - Path=/micro-product/**
##          - Method=GET
#        filters:
#          - SwaggerHeaderFilter
#          - StripPrefix=1
#          - name: RequestRateLimiter
#            args:
#              # 每秒最大访问次数
#              redis-rate-limiter.replenishRate: 10000
#              # 令牌桶最大容量
#              redis-rate-limiter.burstCapacity: 40000
#              # 使用SpEL名称引用Bean，与上面新建的RateLimiterConfig类中的bean的name相同
#              key-resolver: "#{@ipKeyResolver}"
#          - name: Hystrix
#            args:
#              name: fallback
#              fallbackUri: forward:/userFallback

  redis:
    host: 172.19.95.132
    port: 3334
    password: meifute@123
    database: 12
logging:
  level:
    org.springframework.cloud.gateway: debug


knife4j:
  production: false
  basic:
    enable: true
    username: admin
    password: 123321

# hystrix:
#   command:
#     fallbackcmd:
#       execution:
#         isolation:
#           thread:
#             timeoutInMilliseconds: 6000